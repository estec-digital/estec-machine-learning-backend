name: (Prod) - Test & Deploy

on:
  push:
    branches: [prod]

env:
  STAGE: 'prod'
  PROVIDER_NAME: 'aws'
  REGION: 'ap-southeast-1'
  NODE_VERSION: '16.x'
  TZ: 'Asia/Ho_Chi_Minh'

jobs:
  Test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout latest commit of branch ${{ github.ref_name }}
        uses: actions/checkout@v4
      - name: Setup Node.js environment (version ${{ env.NODE_VERSION }})
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      - name: Install Dependencies
        run: |
          yarn
      - name: 'Create .env.test file'
        run: |
          touch .env.test
          echo TEST_VALUE='"<This is a sample test value>"' >> .env.test
      - name: Run test
        run: |
          cat .env.test
          yarn test

  Deploy:
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout latest commit of branch ${{ github.ref_name }}
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::617443366113:role/GithubActionsDeploymentRole
          aws-region: ap-southeast-1
      - name: Install Dependencies
        run: |
          yarn
          yarn global add serverless
      - name: 'Create .env file'
        run: |
          touch .env
          echo STAGE='${{ env.STAGE }}' >> .env
          echo PROVIDER_NAME='${{ env.PROVIDER_NAME }}' >> .env
          echo REGION='${{ env.REGION }}' >> .env
          echo TZ='${{ env.TZ }}' >> .env
          echo AUTH_LOGIN_JWT_TOKEN='${{ secrets.PROD__AUTH_LOGIN_JWT_TOKEN }}' >> .env
          echo AUTH_LOGIN_JWT_TOKEN_EXPIRES_IN='${{ secrets.PROD__AUTH_LOGIN_JWT_TOKEN_EXPIRES_IN }}' >> .env
          echo URL__SENSOR_DATA_PREDICTION='${{ secrets.PROD__URL__SENSOR_DATA_PREDICTION }}' >> .env
          echo GCP_CREDENTIALS_BASE64='${{ secrets.PROD__GCP_CREDENTIALS_BASE64 }}' >> .env
      - name: Run Serverless deploy
        run: |
          serverless deploy --stage ${{ env.STAGE }} --force
